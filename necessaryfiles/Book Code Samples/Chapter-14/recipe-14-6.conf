#
# Example Payloads Detected:
# -------------------------
# IF (SELECT * FROM login) BENCHMARK(1000000,MD5(1))
# SELECT pg_sleep(10);
# IF(SUBSTRING(Password,1,1)='2',BENCHMARK(100000,SHA1(1)),0)
#  User,Password FROM mysql.user WHERE User = 'root';
# select if( user() like 'root@%', benchmark(100000,sha1('test')),
#  'false' );
# -------------------------
#
SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* "(?i:(sleep\((\s*?)(\d*?)(\s*?)\)|benchmark\((.*?)\,(.*?)\)))" "phase:2,capture,t:none,t:urlDecodeUni,block,msg:'Detects blind sqli tests using sleep() or benchmark().',id:'981272',tag:'WEB_ATTACK/SQLI',logdata:'%{TX.0}',severity:'2',setvar:'tx.msg=%{rule.id}-%{rule.msg}',setvar:tx.sql_injection_score=+1,setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{tx.msg}-WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}',pause:%{TX.3}000"


SecRule TX:/SQL_INJECTION/ ".*" "chain,id:'999990',phase:2,log,msg:'Deception Alert: Issuing Fake SQL Errors in Response to SQL Injection Attack.',proxy:http://localhost/fake_sql_errors.html,setenv:url=%{request_filename}"
        SecRule REQUEST_FILENAME "!@streq /fake_sql_errors.html" "ctl:ruleEngine=On"

RequestHeader set X-URL-ORIG "%{url}e" env=url


SecRule REQUEST_FILENAME "@streq /fake_sql_errors.html" "chain,id:'999992',phase:4,nolog,allow"
  SecRule TX:/WEB_ATTACK.SQL_INJECTION/ ".*" "chain"
    SecRule STREAM_OUTPUT_BODY "@rsub s/\$SQL_ATTACK/%{MATCHED_VAR}/" "chain"
      SecRule STREAM_OUTPUT_BODY "@rsub s/\$REQUEST_FILENAME/%{REQUEST_HEADERS.X-URL-ORIG}/" "chain"
        SecRule STREAM_OUTPUT_BODY "@rsub s/\$TIME_SEC/%{TIME_SEC}/" "ctl:ruleEngine=On"

