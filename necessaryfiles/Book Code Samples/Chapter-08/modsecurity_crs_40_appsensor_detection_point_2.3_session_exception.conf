
#
# -=[ OWASP AppSensor Detection Points - Session Exceptions (SE) Category ]=-
#
# - https://www.owasp.org/index.php/AppSensor_DetectionPoints#SessionException
#

#
# -=[ Initiate Session-based Persistent Storage ]=-
#
# This rule will identify the outbound Set-Cookie/Set-Cookie2 SessionID data and then
# initiate the proper ModSecurity session-based persistent storage using setsid.
#
# We also set a Session Variable (session.valid) to mark this SessionID as valid
# since the application returns this to the client in a Set-Cookie header.
#
# This is used later to enforce -
# - 2.3.2 SE2: Adding New Cookie
#
# Capture Source IP Network Block Data.  This is used later to enforce -
# - 2.3.5 SE5: Source Location Changes During Session
#
# Capture User-Agent Hash Data.  This is used later to enforce -
# - 2.3.6 SE6: Change of User Agent Mid Session
#
SecRule RESPONSE_HEADERS:/Set-Cookie2?/ "(?i:(wordpresspass_.*?|j?sessionid|(php)?sessid|(asp|jserv|jw)?session[-_]?(id)?|cf(id|token)|sid)=([^\s]+)\;\s?)" "chain,phase:3,id:'981062',t:none,pass,nolog,capture,setsid:%{TX.6},setvar:session.sessionid=%{TX.6},setvar:session.valid=1,expirevar:session.valid=3600,setvar:session.country_name=%{geo.country_name}"
	SecRule UNIQUE_ID "(.*)" "chain,t:none,t:sha1,t:hexEncode,capture,setvar:session.csrf_token=%{TX.1}"
		SecRule REMOTE_ADDR "^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)"  "chain,capture,setvar:session.ip_block=%{tx.1}"
			SecRule REQUEST_HEADERS:User-Agent ".*" "t:none,t:sha1,t:hexEncode,setvar:session.ua=%{matched_var}"

#
# -=[ Save Set-Cookie Name/Value Pairs ]=-
#
SecRule RESPONSE_HEADERS:/Set-Cookie2?/ "^(.*?)=(.*?);" "chain,phase:3,id:'981063',t:none,nolog,pass,capture,setvar:tx.cookie_name_counter=+1,setvar:tx.cookie_name_%{tx.cookie_name_counter}=/%{tx.1}/,setvar:'session.cookie_list=%{session.cookie_list} %{tx.0}'"
	SecRule SESSION:COOKIE_LIST ".*" "t:trimLeft,setvar:session.cookie_list=%{matched_var}"

SecContentInjection On
SecStreamOutBodyInspection On

#
# -=[ Send Browser Fingerprint Code ]=-
#
SecRule RESPONSE_STATUS "@streq 200" "chain,id:'981802',phase:4,t:none,nolog,pass"
	SecRule RESPONSE_HEADERS:Content-Type "@beginsWith text/html" "chain"
		SecRule &SESSION:KEY "@eq 1" "chain"
			SecRule STREAM_OUTPUT_BODY "@rsub s/<\/head>/<script type=\"text\/javascript\" src=\"\/md5.js\"><\/script><script type=\"text\/javascript\" src=\"\/fingerprint.js\"><\/script><\/head>/" "capture,setvar:session.fingerprint_code_sent=1"


#
# -=[ Enforce Session-based Data ]=-
#
# These rules will identify subsequent SessionIDs being submitted by clients in
# Request Headers. It will use setsid to initate the Session Collection.  We then
# validate the profile data saved when the application issued the original 
# Set-Cookie.
#

#
# If there is not SessionID submitted, then skip these checks.
#
SecRule &REQUEST_COOKIES:'/(wordpresspass_|j?sessionid|(php)?sessid|(asp|jserv|jw)?session[-_]?(id)?|cf(id|token)|sid)/' "@eq 0" "phase:1,id:'981055',t:none,nolog,pass,skipAfter:END_SE_PROFILE_ENFORCEMENT"

#
# -=[ SE2: Adding New Cookie ]=-
# 
# - https://www.owasp.org/index.php/AppSensor_DetectionPoints#SE2:_Adding_New_Cookie
#
# These rules will validate that the SessionID being submitted by the client is valid
#
SecRule REQUEST_COOKIES:'/(wordpresspass_|j?sessionid|(php)?sessid|(asp|jserv|jw)?session[-_]?(id)?|cf(id|token)|sid)/' ".*" "chain,phase:1,id:'981054',t:none,block,msg:'Invalid SessionID Submitted.',logdata:'SessionID Submitted: %{tx.sessionid}',tag:'OWASP_AppSensor/SE2',setsid:%{matched_var},setvar:tx.sessionid=%{session.key},skipAfter:END_SE_PROFILE_ENFORCEMENT"
        SecRule &SESSION:VALID "!@eq 1" "setvar:!session.KEY,t:none,setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/INVALID_SESSIONID-%{matched_var_name}=%{tx.0}"

SecRule SESSION:VALID "@eq 1" "id:'981073',phase:1,chain,t:none,block,msg:'Session Activity Violation: Session Exceeded Idle Threshold.',logdata:'Session Idle for: %{tx.session_idle} seconds.',setvar:session.active=1,setvar:tx.session_idle=%{time_epoch},setvar:tx.session_idle=-%{session.last_update_time}"
	SecRule TX:SESSION_IDLE "@gt 300" "setvar:!session.valid" 

SecRule SESSION:VALID "@eq 1" "id:'981074',phase:1,chain,t:none,nolog,pass"
        SecRule TX:SESSION_IDLE "@lt 300" "setvar:session.active=1"


SecRule REQUEST_COOKIES_NAMES "!@within %{session.cookies_names}" "phase:1,id:'958232',t:none,block,msg:'Invalid Cookie Name Submitted.',logdata:'Cookie Name Submitted: %{matched_var} and Valid Cookie Name List: %{session.cookies_names}',tag:'OWASP_AppSensor/SE2',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/INVALID_SESSIONID-%{matched_var_name}=%{tx.0}"


SecRule REQUEST_COOKIES ".*" "chain,phase:1,id:'958233',t:none,block,msg:'Invalid Cookie Data Submitted.',logdata:'Cookie Data: %{matched_var}',tag:'OWASP_AppSensor/SE1',setvar:'tx.req_cookie_%{matched_var_name}=%{matched_var};'"
	SecRule TX:/REQ_COOKIE_/ "!@within %{session.cookie_list}" "setvar:tx.cookie_name=%{tx.1},setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/INVALID_SESSIONID-%{matched_var_name}=%{tx.0}"
	

#
# -=[ Save the initial Browser Fingerprint Hash in the Session Collection ]=-
#
SecRule &SESSION:BROWSER_HASH "@eq 0" "chain,id:'981803',phase:1,t:none,nolog,pass"
        SecRule REQUEST_COOKIES:BROWSER_HASH ".*" "setvar:session.browser_hash=%{matched_var}"

#
# -=[ If Browser Fingerprint JS was sent previously, then enforce the existence
#     of the browser_hash Cookie field. ]=-
#
SecRule SESSION:FINGERPRINT_CODE_SENT "@eq 1" "chain,id:'981804',phase:1,t:none,block,msg:'Warning: Browser Fingering Cookie Missing.'"
        SecRule &REQUEST_COOKIES:BROWSER_HASH "@eq 0"

SecRule SESSION:FINGERPRINT_CODE_SENT "@eq 1" "chain,id:'981805',phase:1,t:none,block,msg:'Warning: Browser Fingering Cookie Mismatch.',logdata:'Expected Browser Fingerprint: %{session.browser_hash}. Browser Fingerprint Received: %{request_cookies.browser_hash}'"
        SecRule &REQUEST_COOKIES:BROWSER_HASH "@eq 1" "chain"
                SecRule REQUEST_COOKIES:BROWSER_HASH "!@streq %{session.browser_hash}"


#
# -=[ SE5: Source Location Changes During Session ]=-
#
# - https://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_Location_Changes_During_Session
#
#SecRule REMOTE_ADDR "^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)" "phase:1,id:'981057',capture,t:none,nolog,pass,setvar:tx.ip_block=%{tx.1}" 

SecRule REMOTE_ADDR "^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)" "chain,capture,phase:1,id:'981059',t:none,block,msg:'Warning: Source Location Changed During Session. Possible Session Hijacking Attempt',logdata:'Original IP/Network Block Range: %{session.ip_block} and Current IP/Network Block: %{matched_var}',tag:'OWASP_AppSensor/SE5'"
	SecRule TX:1 "!@streq %{SESSION.IP_BLOCK}" "setvar:tx.sticky_session_anomaly=+1,setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/SESSION_HIJACK-%{matched_var_name}=%{tx.0}"

SecGeoLookupDb /usr/local/apache/conf/GeoLiteCity.dat
SecRule ARGS:REMOTE_ADDR "@geoLookup" "id:'999015',phase:2,t:none,pass,nolog"

SecRule &SESSION:COUNTRY_NAME "@eq 1" "chain,id:'981090',phase:2,t:none,block,msg:'Warning: GeoIP Location Change During Session. Possible Session Hijacking Attempt.',logdata:'Original GeoIP Country Name: %{session.country_name} and Current GeoIP Country Name: %{geo.country_name}',tag:'OWASP_AppSensor/SE5'"
	SecRule GEO:COUNTRY_NAME "!@streq %{session.country_name}" "setvar:tx.sticky_session_anomaly=+1,setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/SESSION_HIJACK-%{matched_var_name}=%{tx.0}"


#
# -=[ SE6: Change of User Agent Mid Session ]=-
#
# - https://www.owasp.org/index.php/AppSensor_DetectionPoints#SE6:_Change_of_User_Agent_Mid_Session
#
#SecRule REQUEST_HEADERS:User-Agent ".*" "phase:1,id:'981058',t:none,nolog,pass,setvar:tx.ua=%{matched_var}"

SecRule SESSION:UA "!@streq %{request_headers.user-agent}" "phase:1,id:'981060',t:none,t:sha1,t:hexEncode,block,setvar:tx.sticky_session_anomaly=+1,msg:'Warning: User-Agent Changed During Session. Possible Session Hijacking Attempt',logdata:'Original User-Agent Hash: %{session.ua} and Current User-Agent Hash: %{matched_var}',tag:'OWASP_AppSensor/SE6',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/SESSION_HIJACK-%{matched_var_name}=%{tx.0},setenv:request_cookies=%{request_headers.cookie},exec:/usr/local/apache/conf/crs/wordpress_logout.sh"

#
# -=[ SE5 + SE6 ]=-
#
SecRule TX:STICKY_SESSION_ANOMALY "@eq 2" "phase:1,id:'981061',t:none,block,msg:'Warning: Both Source Location and User-Agent Data Changed During Session.  Possible Session Hijacking Attempt.',logdata:'SessionID: %{session.key}',tag:'OWASP_AppSensor/SE5',tag:'OWASP_AppSensor/SE6',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/SESSION_HIJACK-%{matched_var_name}=%{tx.0}"

SecMarker END_SE_PROFILE_ENFORCEMENT
